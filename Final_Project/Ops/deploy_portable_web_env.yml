---

# Depends on community.docker, community.general, and ansible.posix
# Install with: ansible-galaxy collection install community.docker community.general ansible.posix

#################################################################
# Config Crew Ops Team Deploy Portable Web Environment Playbook #
#################################################################

# Usage: ansible-playbook --limit <hosts> deploy_portable_web_env.yml

- name: Deploy Portable Web Environment
  hosts: all
  remote_user: root

  tasks:
    # Add the Docker yum Repository
    - name: Add Repository
      ansible.builtin.yum_repository:
        name: Docker
        description: Docker Repo
        baseurl: https://download.docker.com/linux/centos/7/x86_64/stable/
        # Trust Packages Downloaded from this Repo Automatically
        gpgcheck: false
    # Install Docker
    - name: Install Docker and Dependencies
      ansible.builtin.yum:
        name: "{{ item }}"
        state: present
      with_items:
        - epel-release
        - docker
        - python
        - python-pip
    - name: Install Docker Python Package
      ansible.builtin.pip:
        name: docker
    # Ensure Docker is Started and Starts on Boot
    - name: Start and Enable Docker
      ansible.builtin.systemd:
        name: docker
        enabled: true
        state: started
    # Copy OpenVPN Config
    # - name: Copy OpenVPN-AS Configs
    #   ansible.builtin.copy:
    #     src: vpnconf/
    #     dest: /vpnconf
    #     mode: 0755
    #     force: true
    # Create HTTPD Container with Appropriate Settings
    - name: Create HTTPD Container
      community.docker.docker_container:
        auto_remove: true
        container_default_behavior: compatibility
        hostname: portablehttp
        image: httpd
        name: httpd
        published_ports:
          - 8080:80
        recreate: true
        volumes:
          - /www:/usr/local/apache2/htdocs
    # Create Samba Container with Appropriate Settings
    - name: Create Samba Container
      community.docker.docker_container:
        auto_remove: true
        container_default_behavior: compatibility
        hostname: wwwfileshare
        image: dperson/samba
        name: samba
        published_ports:
          - 139:139
          - 445:445
        recreate: true
        volumes:
          - /www:/mount
    # Create OpenVPN Container with Appropriate Settings
    - name: Create OpenVPN Container
      community.docker.docker_container:
        auto_remove: true
        container_default_behavior: compatibility
        hostname: openvpn
        image: linuxserver/openvpn-as
        name: openvpn
        published_ports:
          - 943:943
          - 9443:9443
          - 1194:1194
        env:
          PUID: 1000
          PGID: 1000
          TZ: America/New_York
        capabilities:
          - NET_ADMIN
        recreate: true
        volumes:
          - /vpnconf:/config
    - name: Open Firewall Ports
      ansible.posix.firewalld:
        port: "{{ item }}"
        permanent: true
        state: enabled
      with_items:
        - 943/TCP
        - 943/UDP
        - 944/TCP
        - 944/UDP
        - 9443/TCP
        - 9443/UDP
        - 1194/TCP
        - 1194/UDP
        - 139/TCP
        - 139/UDP
        - 445/TCP
        - 445/UDP
        - 8080/TCP
        - 8080/UDP
    - name: Reload Firewalld
      ansible.builtin.systemd:
        name: firewalld
        state: reloaded
    - name: Get Public IP
      community.general.ipify_facts:
      register: publicip
    - name: Show Info Output
      ansible.builtin.debug:
        msg: "Your portable web environment should now be online! Your external IP is: {{ publicip }},
          your internal IP is: {{ hostvars[inventory_hostname]['ansible_host'] }}.
          Please be sure to port forward the following ports if necessary as Ansible can't do this for you:"
    - name: Show Ports to Forward
      ansible.builtin.debug:
        msg: "{{ item }}"
      with_items:
        - 944/TCP
        - 944/UDP
        - 9443/TCP
        - 9443/UDP
        - 1194/TCP
        - 1194/UDP
